{"version":3,"file":"static/js/685.0b727591.chunk.js","mappings":"8MAuIA,UApHA,WACE,OAAoBA,EAAAA,EAAAA,UAAS,IAAG,eAAzBC,EAAE,KAAEC,EAAK,KAChB,GAAoBF,EAAAA,EAAAA,UAAS,IAAG,eAAzBG,EAAE,KAAEC,EAAK,KAkDhB,OACE,gBAAKC,UAAU,yDAAwD,UACrE,SAAC,KAAU,WACT,SAAC,KAAI,CAACA,UAAU,yBAAwB,UACtC,SAAC,KAAI,CAACC,GAAI,EAAE,UACV,UAAC,KAAU,YACT,SAAC,KAAK,CAACD,UAAU,MAAK,UACpB,SAAC,KAAS,WACR,UAAC,KAAK,CAACE,SAvDJ,SAACC,GAGlB,GAFAA,EAAEC,kBAEER,EACF,OAAOS,MAAM,2CACR,IAAIP,EACT,OAAOO,MAAM,2CAEbC,QAAQC,IAAI,OAASX,GACrBU,QAAQC,WAAWX,GACnBU,QAAQC,IAAI,OAAST,GACrBQ,QAAQC,WAAWT,GAGnB,IAAMU,EAAO,CAACZ,GAAAA,EAAIE,GAAAA,GAClBQ,QAAQC,IAAIC,GAKZC,EAAAA,GAAAA,KAAW,IAAKD,GACfE,MAAK,SAACC,GACLL,QAAQC,IAAII,EAqBd,GAEJ,EAU4C,WAC1B,gDACA,cAAGX,UAAU,0BACb,UAAC,KAAW,CAACA,UAAU,OAAM,WAC3B,SAAC,KAAe,WACd,SAAC,IAAK,CAACY,KAAMC,EAAAA,OAEf,SAAC,KAAU,CAACC,YAAY,KAAKC,KAAK,KAAKC,SAAU,SAACb,GAAC,OAAKN,EAAMM,EAAEc,OAAOC,MAAM,QAE/E,UAAC,KAAW,CAAClB,UAAU,OAAM,WAC3B,SAAC,KAAe,WACd,SAAC,IAAK,CAACY,KAAMO,EAAAA,OAEf,SAAC,KAAU,CACTJ,KAAK,KACLK,KAAK,WACLN,YAAY,KACZE,SAAU,SAACb,GAAC,OAAKJ,EAAMI,EAAEc,OAAOC,MAAM,QAG1C,UAAC,KAAI,YACH,SAAC,KAAI,CAACG,GAAI,EAAE,UACV,SAAC,KAAO,CAACD,KAAK,SAASE,MAAM,UAAUtB,UAAU,OAAM,mCAEzD,SAAC,KAAI,CAACqB,GAAI,EAAGrB,UAAU,aAAY,UACjC,SAAC,KAAO,CAACsB,MAAM,OAAOtB,UAAU,OAAM,gEAQhD,SAAC,KAAK,CAACA,UAAU,6BAA6BuB,MAAO,CAAEC,MAAO,OAAQ,UACpE,SAAC,KAAS,CAACxB,UAAU,cAAa,UAChC,4BACE,8DACA,yIAGA,SAAC,KAAI,CAACyB,GAAG,YAAW,UAClB,SAAC,KAAO,CAACH,MAAM,UAAUtB,UAAU,OAAO0B,QAAM,EAACC,UAAW,EAAE,+DAapF,C","sources":["login/Login.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CCol,\n  CContainer,\n  CForm,\n  CFormInput,\n  CInputGroup,\n  CInputGroupText,\n  CRow,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilLockLocked, cilUser } from '@coreui/icons'\nimport axios from 'axios'\n\nfunction Login(){\n  const [id, setId] = useState(\"\");\n  const [pw, setPw] = useState(\"\");\n\n  // 입력 값 확인 및 submit\n  const inputCheck = (e) => {\n    e.preventDefault(); // reload 막기\n\n    if(!id){\n      return alert(\"ID를 입력하세요\");\n    } else if(!pw){\n      return alert(\"PW를 입력하세요\");\n    } else {\n      console.log(\"id: \" + id);\n      console.log(typeof id)\n      console.log(\"pw: \" + pw);\n      console.log(typeof pw)\n\n      // object의 key, value 이름이 같으면 생략 가능\n      const data = {id, pw};\n      console.log(data);\n      // data = JSON.stringify(data);\n      // console.log(data);\n      // console.log(typeof data);\n\n      axios.post(\"/\", data)\n      .then((res) => {\n        console.log(res);\n\n        /*\n        if(res.data.code === 200) {\n          console.log(\"로그인\");\n          dispatch(loginUser(res.data.userInfo));\n          setMsg(\"\");\n        }\n\n        if(res.data.code === 400) {\n          setMsg(\"아이디와 비밀번호를 입력해주세요.\");\n        }\n        \n        if(res.data.code === 401) {\n          setMsg(\"존재하지 않는 ID입니다.\");\n        }\n        \n        if(res.data.code === 402) {\n          setMsg(\"비밀번호가 틀립니다.\");\n        }\n        */\n      });\n    }\n  }\n\n  return (\n    <div className=\"bg-light min-vh-100 d-flex flex-row align-items-center\">\n      <CContainer>\n        <CRow className=\"justify-content-center\">\n          <CCol md={8}>\n            <CCardGroup>\n              <CCard className=\"p-4\">\n                <CCardBody>\n                  <CForm onSubmit={inputCheck}>\n                    <h1>로그인</h1>\n                    <p className=\"text-medium-emphasis\"></p>\n                    <CInputGroup className=\"mb-3\">\n                      <CInputGroupText>\n                        <CIcon icon={cilUser} />\n                      </CInputGroupText>\n                      <CFormInput placeholder=\"ID\" name=\"id\" onChange={(e) => setId(e.target.value)}/>\n                    </CInputGroup>\n                    <CInputGroup className=\"mb-4\">\n                      <CInputGroupText>\n                        <CIcon icon={cilLockLocked} />\n                      </CInputGroupText>\n                      <CFormInput\n                        name=\"pw\"\n                        type=\"password\"\n                        placeholder=\"PW\"\n                        onChange={(e) => setPw(e.target.value)}\n                      />\n                    </CInputGroup>\n                    <CRow>\n                      <CCol xs={6}>\n                        <CButton type=\"submit\" color=\"primary\" className=\"px-4\">로그인</CButton>\n                      </CCol>\n                      <CCol xs={6} className=\"text-right\">\n                        <CButton color=\"link\" className=\"px-0\">\n                          비밀번호 찾기\n                        </CButton>\n                      </CCol>\n                    </CRow>\n                  </CForm>\n                </CCardBody>\n              </CCard>\n              <CCard className=\"text-white bg-primary py-5\" style={{ width: '44%' }}>\n                <CCardBody className=\"text-center\">\n                  <div>\n                    <h2>식물 키우기!</h2>\n                    <p>\n                      가드너가 되지 못한 당신을 위한 해결 방안\n                    </p>\n                    <Link to=\"/register\">\n                      <CButton color=\"primary\" className=\"mt-3\" active tabIndex={-1}>\n                        가입하세요\n                      </CButton>\n                    </Link>\n                  </div>\n                </CCardBody>\n              </CCard>\n            </CCardGroup>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n  )\n}\n\nexport default Login\n"],"names":["useState","id","setId","pw","setPw","className","md","onSubmit","e","preventDefault","alert","console","log","data","axios","then","res","icon","cilUser","placeholder","name","onChange","target","value","cilLockLocked","type","xs","color","style","width","to","active","tabIndex"],"sourceRoot":""}